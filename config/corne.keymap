/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

&soft_off {
    hold-time-ms = <1000>; // Only turn off it the key is held for 1 second or longer.
};

&mt {
    tapping-term-ms = <138>;
};

/ {
        behaviors {
            lguilalt: tap_dance_0 {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp LGUI>, <&kp LALT>;
            };

            bkspdel: backspace_delete {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp BSPC>, <&kp DEL>;
                mods = <(MOD_LSFT)>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | TAB/ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |   I   |  O  |  P  | F22  |
// | CTRL    |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |   K   |  L  |  ;  |  '   |
// | SHFT    |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |   ,   |  .  |  /  | SHFT |
//                       |TPD0 |LOWER| SPC |   | ENT |RAISE | BSPC  |
                    bindings = <
   &mt ESC TAB  &kp Q  &kp W  &kp E     &kp R  &kp T           &kp Y   &kp U  &kp I     &kp O   &kp P    &kp F22
   &kp LCTRL    &kp A  &kp S  &kp D     &kp F  &kp G           &kp H   &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT    &kp Z  &kp X  &kp C     &kp V  &kp B           &kp N   &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHIFT
                              &lguilalt &mo 1  &kp SPACE       &kp RET &mo 2  &kp BSPC
                    >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |     |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | F24 |
// |  `  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  ~  |
// | TOG |     |BTCLR|     |BT_PV|BT_NT|   |  _  |     |     |  {  |  }  | "|" |
//                   |     |     |STOFF|   |     |     | DEL |
                    bindings = <
   &trans       &kp N1     &kp N2     &kp N3       &kp N4       &kp N5              &kp N6      &kp N7    &kp N8    &kp N9    &kp N0   &kp F24
   &kp GRAVE    &kp EXCL   &kp AT     &kp HASH     &kp DLLR     &kp PRCNT           &kp CARET   &kp AMPS  &kp ASTRK &kp LPAR  &kp RPAR &kp TILDE
   &out OUT_TOG &trans     &bt BT_CLR &trans       &bt BT_PRV   &bt BT_NXT          &kp UNDER   &kp PSCRN &trans    &kp LBRC  &kp RBRC &kp PIPE
                                      &trans       &trans       &soft_off           &trans      &trans    &kp DEL
                    >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |     |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | PG_DN |
// | F1  | F2  | F3  | F4  | F5  | F6  |   | <-  |  v  |  ^  | ->  |     | PG_DN |
// | F7  | F8  | F9  | F10 | F11 | F12 |   |  -  |  +  |  =  |  [  |  ]  |   \   |
//                   |     |     |     |   |     |     |CAPS |
                    bindings = <
   &trans    &kp N1   &kp N2 &kp N3   &kp N4   &kp N5        &kp N6    &kp N7    &kp N8    &kp N9    &kp N0   &kp PG_UP
   &kp F1    &kp F2   &kp F3 &kp F4   &kp F5   &kp F6        &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans   &kp PG_DN
   &kp F1    &kp F8   &kp F9 &kp F10  &kp F11  &kp F12       &kp MINUS &kp PLUS  &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH
                             &trans   &trans   &trans        &trans    &trans    &kp CAPS
                    >;
                };
        };
};
